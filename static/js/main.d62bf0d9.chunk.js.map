{"version":3,"sources":["component/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","recovered","confirmed","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAkGeA,EAhGD,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,+EAECC,MAAM,2CAFP,cAEXC,EAFW,gBAGQA,EAAIC,OAHZ,OAGXC,EAHW,OAIjBC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALZ,kDAOjBF,QAAQC,IAAR,MAPiB,0DAAH,qDAelB,OAJAE,qBAAU,WACRT,MACC,IAGD,mCACE,oCACE,mDACA,8DAEA,+BACE,oBAAIU,UAAU,OAAd,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,wCADF,cAGA,mBAAGA,UAAU,wBAAb,0BAKN,oBAAIA,UAAU,OAAd,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,0CADF,gBAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKa,mBAKjD,oBAAID,UAAU,OAAd,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,0CADF,gBAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKc,mBAKjD,oBAAIF,UAAU,OAAd,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,0CADF,aAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKe,gBAKjD,oBAAIH,UAAU,OAAd,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,0CADF,aAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKgB,gBAKjD,oBAAIJ,UAAU,OAAd,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,yCADF,cAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKiB,kCC7E5CC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d62bf0d9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./covid.css\";\r\nconst Covid = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getCovidData = async () => {\r\n    try {\r\n      const res = await fetch(\"https://data.covid19india.org/data.json\");\r\n      const actualData = await res.json();\r\n      console.log(actualData.statewise[0]);\r\n      setData(actualData.statewise[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCovidData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h1>ðŸ”´ LIVE</h1>\r\n        <h2>COVID-19 CORONAVIRUS TRACKER</h2>\r\n\r\n        <ul>\r\n          <li className=\"card\">\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\">\r\n                  <span> OUR</span> COUNTRY\r\n                </p>\r\n                <p className=\"card_total card_small\">INDIA</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n\r\n          <li className=\"card\">\r\n            <div className=\"card_main-1\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\">\r\n                  <span> Total</span> RECOVERED\r\n                </p>\r\n                <p className=\"card_total card_small\">{data.recovered}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n\r\n          <li className=\"card\">\r\n            <div className=\"card_main-2\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\">\r\n                  <span> Total</span> CONFIRMED\r\n                </p>\r\n                <p className=\"card_total card_small\">{data.confirmed}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n\r\n          <li className=\"card\">\r\n            <div className=\"card_main-3\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\">\r\n                  <span> Total</span> DEATHS\r\n                </p>\r\n                <p className=\"card_total card_small\">{data.deaths}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n\r\n          <li className=\"card\">\r\n            <div className=\"card_main-4\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\">\r\n                  <span> Total</span> ACTIVE\r\n                </p>\r\n                <p className=\"card_total card_small\">{data.active}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n\r\n          <li className=\"card\">\r\n            <div className=\"card_main-5\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\">\r\n                  <span> Last</span> UPDATED\r\n                </p>\r\n                <p className=\"card_total card_small\">{data.lastupdatedtime}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import React from \"react\";\nimport Covid from \"./component/covid\";\n\nconst App = () => {\n  return (\n    <>\n      <Covid />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}